// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Middleware_REST_API.Model;

#nullable disable

namespace Middleware_REST_API.Migrations
{
    [DbContext(typeof(ContextDb))]
    [Migration("20240622142047_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Middleware_REST_API.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Category A",
                            Description = "Description for Product 1",
                            Images = "[\"image1.jpg\",\"image2.jpg\"]",
                            Price = 99.99m,
                            Title = "Product 1"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Category B",
                            Description = "Description for Product 2",
                            Images = "[\"image3.jpg\",\"image4.jpg\"]",
                            Price = 149.99m,
                            Title = "Product 2"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Category C",
                            Description = "Description for Product 3",
                            Images = "[\"image5.jpg\",\"image6.jpg\"]",
                            Price = 1.99m,
                            Title = "Product 3"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Category D",
                            Description = "Description for Product 4",
                            Images = "[\"image7.jpg\",\"image8.jpg\"]",
                            Price = 14.99m,
                            Title = "Product 4"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Category E",
                            Description = "Description for Product 5",
                            Images = "[\"image9.jpg\",\"image10.jpg\"]",
                            Price = 5.99m,
                            Title = "Product 5"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
